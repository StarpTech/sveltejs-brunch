// The complete compiled output of the svelte program except for the svelte version header removed
const outputData = '"use strict";\n\nconst {\n\tSvelteComponent,\n\tadd_render_callback,\n\tadd_resize_listener,\n\tappend,\n\tattr,\n\tdestroy_each,\n\tdetach,\n\telement,\n\tinit,\n\tinsert,\n\tnoop,\n\tsafe_not_equal,\n\tset_data,\n\tspace,\n\tsvg_element,\n\ttext\n} = require("svelte/internal");\n\nconst { scaleLinear } = require("d3-scale");\n\nfunction add_css() {\n\tvar style = element("style");\n\tstyle.id = \'svelte-2flq1i-style\';\n\tstyle.textContent = "h2.svelte-2flq1i{text-align:center}.chart.svelte-2flq1i{width:100%;max-width:500px;margin:0 auto}svg.svelte-2flq1i{position:relative;width:100%;height:200px}.tick.svelte-2flq1i{font-family:Helvetica, Arial;font-size:.725em;font-weight:200}.tick.svelte-2flq1i line.svelte-2flq1i{stroke:#e2e2e2;stroke-dasharray:2}.tick.svelte-2flq1i text.svelte-2flq1i{fill:#ccc;text-anchor:start}.tick.tick-0.svelte-2flq1i line.svelte-2flq1i{stroke-dasharray:0}.x-axis.svelte-2flq1i .tick text.svelte-2flq1i{text-anchor:middle}.bars.svelte-2flq1i rect.svelte-2flq1i{fill:#a11;stroke:none;opacity:0.65}";\n\tappend(document.head, style);\n}\n\nfunction get_each_context(ctx, list, i) {\n\tconst child_ctx = Object.create(ctx);\n\tchild_ctx.point = list[i];\n\tchild_ctx.i = i;\n\treturn child_ctx;\n}\n\nfunction get_each_context_1(ctx, list, i) {\n\tconst child_ctx = Object.create(ctx);\n\tchild_ctx.point = list[i];\n\tchild_ctx.i = i;\n\treturn child_ctx;\n}\n\nfunction get_each_context_2(ctx, list, i) {\n\tconst child_ctx = Object.create(ctx);\n\tchild_ctx.tick = list[i];\n\treturn child_ctx;\n}\n\n// (91:3) {#each yTicks as tick}\nfunction create_each_block_2(ctx) {\n\tvar g, line, text_1, t0_value = ctx.tick, t0, t1_value = ctx.tick === 20 ? \' per 1,000 population\' : \'\', t1, g_class_value, g_transform_value;\n\n\treturn {\n\t\tc() {\n\t\t\tg = svg_element("g");\n\t\t\tline = svg_element("line");\n\t\t\ttext_1 = svg_element("text");\n\t\t\tt0 = text(t0_value);\n\t\t\tt1 = text(t1_value);\n\t\t\tattr(line, "x2", "100%");\n\t\t\tattr(line, "class", "svelte-2flq1i");\n\t\t\tattr(text_1, "y", "-4");\n\t\t\tattr(text_1, "class", "svelte-2flq1i");\n\t\t\tattr(g, "class", g_class_value = "tick tick-" + ctx.tick + " svelte-2flq1i");\n\t\t\tattr(g, "transform", g_transform_value = "translate(0, " + (ctx.yScale(ctx.tick) - ctx.padding.bottom) + ")");\n\t\t},\n\n\t\tm(target, anchor) {\n\t\t\tinsert(target, g, anchor);\n\t\t\tappend(g, line);\n\t\t\tappend(g, text_1);\n\t\t\tappend(text_1, t0);\n\t\t\tappend(text_1, t1);\n\t\t},\n\n\t\tp(changed, ctx) {\n\t\t\tif ((changed.yScale) && g_transform_value !== (g_transform_value = "translate(0, " + (ctx.yScale(ctx.tick) - ctx.padding.bottom) + ")")) {\n\t\t\t\tattr(g, "transform", g_transform_value);\n\t\t\t}\n\t\t},\n\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(g);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (101:3) {#each points as point, i}\nfunction create_each_block_1(ctx) {\n\tvar g, text_1, t_value = ctx.width > 380 ? ctx.point.year : formatMobile(ctx.point.year), t, text_1_x_value, g_transform_value;\n\n\treturn {\n\t\tc() {\n\t\t\tg = svg_element("g");\n\t\t\ttext_1 = svg_element("text");\n\t\t\tt = text(t_value);\n\t\t\tattr(text_1, "x", text_1_x_value = ctx.barWidth/2);\n\t\t\tattr(text_1, "y", "-4");\n\t\t\tattr(text_1, "class", "svelte-2flq1i");\n\t\t\tattr(g, "class", "tick svelte-2flq1i");\n\t\t\tattr(g, "transform", g_transform_value = "translate(" + ctx.xScale(ctx.i) + "," + ctx.height + ")");\n\t\t},\n\n\t\tm(target, anchor) {\n\t\t\tinsert(target, g, anchor);\n\t\t\tappend(g, text_1);\n\t\t\tappend(text_1, t);\n\t\t},\n\n\t\tp(changed, ctx) {\n\t\t\tif ((changed.width) && t_value !== (t_value = ctx.width > 380 ? ctx.point.year : formatMobile(ctx.point.year))) {\n\t\t\t\tset_data(t, t_value);\n\t\t\t}\n\n\t\t\tif ((changed.barWidth) && text_1_x_value !== (text_1_x_value = ctx.barWidth/2)) {\n\t\t\t\tattr(text_1, "x", text_1_x_value);\n\t\t\t}\n\n\t\t\tif ((changed.xScale || changed.height) && g_transform_value !== (g_transform_value = "translate(" + ctx.xScale(ctx.i) + "," + ctx.height + ")")) {\n\t\t\t\tattr(g, "transform", g_transform_value);\n\t\t\t}\n\t\t},\n\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(g);\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (109:3) {#each points as point, i}\nfunction create_each_block(ctx) {\n\tvar rect, rect_x_value, rect_y_value, rect_width_value, rect_height_value;\n\n\treturn {\n\t\tc() {\n\t\t\trect = svg_element("rect");\n\t\t\tattr(rect, "x", rect_x_value = ctx.xScale(ctx.i) + 2);\n\t\t\tattr(rect, "y", rect_y_value = ctx.yScale(ctx.point.birthrate));\n\t\t\tattr(rect, "width", rect_width_value = ctx.barWidth - 4);\n\t\t\tattr(rect, "height", rect_height_value = ctx.height - ctx.padding.bottom - ctx.yScale(ctx.point.birthrate));\n\t\t\tattr(rect, "class", "svelte-2flq1i");\n\t\t},\n\n\t\tm(target, anchor) {\n\t\t\tinsert(target, rect, anchor);\n\t\t},\n\n\t\tp(changed, ctx) {\n\t\t\tif ((changed.xScale) && rect_x_value !== (rect_x_value = ctx.xScale(ctx.i) + 2)) {\n\t\t\t\tattr(rect, "x", rect_x_value);\n\t\t\t}\n\n\t\t\tif ((changed.yScale) && rect_y_value !== (rect_y_value = ctx.yScale(ctx.point.birthrate))) {\n\t\t\t\tattr(rect, "y", rect_y_value);\n\t\t\t}\n\n\t\t\tif ((changed.barWidth) && rect_width_value !== (rect_width_value = ctx.barWidth - 4)) {\n\t\t\t\tattr(rect, "width", rect_width_value);\n\t\t\t}\n\n\t\t\tif ((changed.height || changed.yScale) && rect_height_value !== (rect_height_value = ctx.height - ctx.padding.bottom - ctx.yScale(ctx.point.birthrate))) {\n\t\t\t\tattr(rect, "height", rect_height_value);\n\t\t\t}\n\t\t},\n\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(rect);\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tvar h2, t_1, div, svg, g0, g0_transform_value, g1, g2, div_resize_listener;\n\n\tvar each_value_2 = ctx.yTicks;\n\n\tvar each_blocks_2 = [];\n\n\tfor (var i = 0; i < each_value_2.length; i += 1) {\n\t\teach_blocks_2[i] = create_each_block_2(get_each_context_2(ctx, each_value_2, i));\n\t}\n\n\tvar each_value_1 = ctx.points;\n\n\tvar each_blocks_1 = [];\n\n\tfor (var i = 0; i < each_value_1.length; i += 1) {\n\t\teach_blocks_1[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));\n\t}\n\n\tvar each_value = ctx.points;\n\n\tvar each_blocks = [];\n\n\tfor (var i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\th2 = element("h2");\n\t\t\th2.textContent = "US birthrate by year";\n\t\t\tt_1 = space();\n\t\t\tdiv = element("div");\n\t\t\tsvg = svg_element("svg");\n\t\t\tg0 = svg_element("g");\n\n\t\t\tfor (var i = 0; i < each_blocks_2.length; i += 1) {\n\t\t\t\teach_blocks_2[i].c();\n\t\t\t}\n\n\t\t\tg1 = svg_element("g");\n\n\t\t\tfor (var i = 0; i < each_blocks_1.length; i += 1) {\n\t\t\t\teach_blocks_1[i].c();\n\t\t\t}\n\n\t\t\tg2 = svg_element("g");\n\n\t\t\tfor (var i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\t\t\th2.className = "svelte-2flq1i";\n\t\t\tattr(g0, "class", "axis y-axis");\n\t\t\tattr(g0, "transform", g0_transform_value = "translate(0," + ctx.padding.top + ")");\n\t\t\tattr(g1, "class", "axis x-axis svelte-2flq1i");\n\t\t\tattr(g2, "class", "bars svelte-2flq1i");\n\t\t\tattr(svg, "class", "svelte-2flq1i");\n\t\t\tadd_render_callback(() => ctx.div_resize_handler.call(div));\n\t\t\tdiv.className = "chart svelte-2flq1i";\n\t\t},\n\n\t\tm(target, anchor) {\n\t\t\tinsert(target, h2, anchor);\n\t\t\tinsert(target, t_1, anchor);\n\t\t\tinsert(target, div, anchor);\n\t\t\tappend(div, svg);\n\t\t\tappend(svg, g0);\n\n\t\t\tfor (var i = 0; i < each_blocks_2.length; i += 1) {\n\t\t\t\teach_blocks_2[i].m(g0, null);\n\t\t\t}\n\n\t\t\tappend(svg, g1);\n\n\t\t\tfor (var i = 0; i < each_blocks_1.length; i += 1) {\n\t\t\t\teach_blocks_1[i].m(g1, null);\n\t\t\t}\n\n\t\t\tappend(svg, g2);\n\n\t\t\tfor (var i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].m(g2, null);\n\t\t\t}\n\n\t\t\tdiv_resize_listener = add_resize_listener(div, ctx.div_resize_handler.bind(div));\n\t\t},\n\n\t\tp(changed, ctx) {\n\t\t\tif (changed.yTicks || changed.yScale || changed.padding) {\n\t\t\t\teach_value_2 = ctx.yTicks;\n\n\t\t\t\tfor (var i = 0; i < each_value_2.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context_2(ctx, each_value_2, i);\n\n\t\t\t\t\tif (each_blocks_2[i]) {\n\t\t\t\t\t\teach_blocks_2[i].p(changed, child_ctx);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks_2[i] = create_each_block_2(child_ctx);\n\t\t\t\t\t\teach_blocks_2[i].c();\n\t\t\t\t\t\teach_blocks_2[i].m(g0, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (; i < each_blocks_2.length; i += 1) {\n\t\t\t\t\teach_blocks_2[i].d(1);\n\t\t\t\t}\n\t\t\t\teach_blocks_2.length = each_value_2.length;\n\t\t\t}\n\n\t\t\tif (changed.xScale || changed.height || changed.barWidth || changed.width || changed.points || changed.formatMobile) {\n\t\t\t\teach_value_1 = ctx.points;\n\n\t\t\t\tfor (var i = 0; i < each_value_1.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context_1(ctx, each_value_1, i);\n\n\t\t\t\t\tif (each_blocks_1[i]) {\n\t\t\t\t\t\teach_blocks_1[i].p(changed, child_ctx);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks_1[i] = create_each_block_1(child_ctx);\n\t\t\t\t\t\teach_blocks_1[i].c();\n\t\t\t\t\t\teach_blocks_1[i].m(g1, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (; i < each_blocks_1.length; i += 1) {\n\t\t\t\t\teach_blocks_1[i].d(1);\n\t\t\t\t}\n\t\t\t\teach_blocks_1.length = each_value_1.length;\n\t\t\t}\n\n\t\t\tif (changed.xScale || changed.yScale || changed.points || changed.barWidth || changed.height || changed.padding) {\n\t\t\t\teach_value = ctx.points;\n\n\t\t\t\tfor (var i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(changed, child_ctx);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\teach_blocks[i].m(g2, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (; i < each_blocks.length; i += 1) {\n\t\t\t\t\teach_blocks[i].d(1);\n\t\t\t\t}\n\t\t\t\teach_blocks.length = each_value.length;\n\t\t\t}\n\t\t},\n\n\t\ti: noop,\n\t\to: noop,\n\n\t\td(detaching) {\n\t\t\tif (detaching) {\n\t\t\t\tdetach(h2);\n\t\t\t\tdetach(t_1);\n\t\t\t\tdetach(div);\n\t\t\t}\n\n\t\t\tdestroy_each(each_blocks_2, detaching);\n\n\t\t\tdestroy_each(each_blocks_1, detaching);\n\n\t\t\tdestroy_each(each_blocks, detaching);\n\n\t\t\tdiv_resize_listener.cancel();\n\t\t}\n\t};\n}\n\nfunction formatMobile(tick) {\n\treturn "\'" + tick % 100;\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tconst points = [\n\t\t{ year: 1990, birthrate: 16.7 },\n\t\t{ year: 1995, birthrate: 14.6 },\n\t\t{ year: 2000, birthrate: 14.4 },\n\t\t{ year: 2005, birthrate: 14 },\n\t\t{ year: 2010, birthrate: 13 },\n\t\t{ year: 2015, birthrate: 12.4 }\n\t];\n\n\tconst xTicks = [1990, 1995, 2000, 2005, 2010, 2015];\n\tconst yTicks = [0, 5, 10, 15, 20];\n\tconst padding = { top: 20, right: 15, bottom: 20, left: 25 };\n\n\tlet width = 500;\n\tlet height = 200;\n\n\tfunction div_resize_handler() {\n\t\twidth = this.clientWidth;\n\t\theight = this.clientHeight;\n\t\t$$invalidate(\'width\', width);\n\t\t$$invalidate(\'height\', height);\n\t}\n\n\tlet xScale, yScale, innerWidth, barWidth;\n\n\t$$self.$$.update = ($$dirty = { width: 1, height: 1, innerWidth: 1 }) => {\n\t\tif ($$dirty.width) { $$invalidate(\'xScale\', xScale = scaleLinear()\n\t\t\t\t.domain([0, xTicks.length])\n\t\t\t\t.range([padding.left, width - padding.right])); }\n\t\tif ($$dirty.height) { $$invalidate(\'yScale\', yScale = scaleLinear()\n\t\t\t\t.domain([0, Math.max.apply(null, yTicks)])\n\t\t\t\t.range([height - padding.bottom, padding.top])); }\n\t\tif ($$dirty.width) { $$invalidate(\'innerWidth\', innerWidth = width - (padding.left + padding.right)); }\n\t\tif ($$dirty.innerWidth) { $$invalidate(\'barWidth\', barWidth = innerWidth / xTicks.length); }\n\t};\n\n\treturn {\n\t\tpoints,\n\t\tyTicks,\n\t\tpadding,\n\t\twidth,\n\t\theight,\n\t\txScale,\n\t\tyScale,\n\t\tbarWidth,\n\t\tdiv_resize_handler\n\t};\n}\n\nclass Test extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tif (!document.getElementById("svelte-2flq1i-style")) add_css();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, []);\n\t}\n}\n\nexports.default = Test;'

module.exports = { outputData }